quit()
plot(density(a))
a <- rnorm(100,20,10)
plot(density(a))
getwd()
setwd("/home/piergiorgio/coursera_dataScience/")
quit()
swirl()
libraries("swirl")
library("swirl")
swirl()
x <- c(44, NA, 5, NA)
x *3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my.data == NA
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
swirl()
library("swirl")
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(1:20, 4,5)
my_matrix2 <- matrix(1:20, 4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
play()
names(my_data)
colnames(my_data)
nxt()
colnames(my_data) <- cnames
mmy_data
my_data
x <- 1:20
above <- function(x, n) {
use <- x > n
x[use]
}
above(x, 12)
colummean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
colummean(airquality)
colummean <- function(y, remove = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
colummean(airquality)
colummean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
colummean(airquality)
search()
make.power <-function(n) {
pow <- function(x){
x^n
}
}
cube <- make.power(3)
square <- make.power(2)
cube
cube(3)
?ls
ls(environment(cube))
get("n", environment(cube))
get("pow", environment(cube))
get("n", environment(pow))
get("n", environment(cube.pow))
get("n", environment(cube))
ls(environment(pow))
ls(environment(cube.pow))
optim(make.power) # alternatives are nlm() and optimize()
optim(make.power(20)) # alternatives are nlm() and optimize()
a <- c(1:20)
optim(make.power(a)) # alternatives are nlm() and optimize()
as.date("2016-02-28")
as.Date("2016-02-28")
as.POSIXct("2016-02-28")
as.POSIXlt("2016-02-28")
as.POSIXct("2016-02-28 22:00:00 UTC")
as.POSIXlt("2016-02-28 11:00:00 GMT")
unclass(a)
a <- as.POSIXct("2016-02-28 22:00:00 UTC")
unclass(a)
b <- as.POSIXlt("2016-02-28 11:00:00 GMT")
unclass(b)
a <- as.POSIXct("2016-02-28 22:00:00 UTC")
unclass(a)
datestring <- c("January 10, 2012 10:40", "December 9, 2011, 2011 9:10")
strptime(datestring, "%B %d, %Y %H:%M")
datestring <- c("January 10, 2012 10:40", "December 9, 2011 9:10")
strptime(datestring, "%B %d, %Y %H:%M")
x <- 1:10
if (x>5) {}
